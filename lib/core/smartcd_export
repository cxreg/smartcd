# Export file format: (leading space added before all file contents)
# -------------------------
# smartcd export 1.0
# @ scripts/home/user/foo
#  ...
#  ...
# @ templates/wtf
#  ...
# -------------------------
function smartcd_export() {
    # not using stash here to avoid interfering with the user, who might also have it stashed.
    local _old_ifs="$IFS"
    local base=$(_smartcd_base)
    IFS=$'\n'
    echo "smartcd export 1.0"
    apush remaining_dirs "scripts" "templates"
    while (( $(alen remaining_dirs) > 0 )); do
        dir=$(afirst remaining_dirs)
        ashift remaining_dirs >/dev/null
        files="$(command ls $base/$dir)"
        for entry in $files; do
            if [[ -f "$base/$dir/$entry" ]]; then
                echo "@ $dir/$entry"
                local line=
                while builtin read -r line; do
                    echo " $line"
                done < "$base/$dir/$entry"
            elif [[ -d "$base/$dir/$entry" ]]; then
                apush remaining_dirs "$dir/$entry"
            else
                echo "Skipping unknown file $base/$dir/$entry" >&2
            fi
        done
    done

    IFS="$_old_ifs"
}

function smartcd_import() {
    if [[ -n $1 ]]; then
        cat "$1" | _smartcd_import
    else
        _smartcd_import
    fi
}

function _smartcd_import() {
    local _old_ifs="$IFS"
    IFS=$'\n'

    if [[ -d "$base" ]]; then
        for file in $(command ls "$base"); do
            case $file in
                scripts|templates) command mkdir -p "$base/archive"
                                   local backup=$(command mktemp -d "$base/archive/import-backup.XXXXXX")
                                   if (( ${SMARTCD_QUIET:-0} == 0 )); then
                                       echo "Old $base/$file found, moving to $backup"
                                   fi
                                   command mv "$base/$file" "$backup"
                                   ;;
            esac
        done

        # These will be all wrong, so remove them
        command rm -rf "$base/inodes"
    fi

    local line=
    while builtin read -r line; do
        case $line in
            "smartcd export"*) ;;
                        "@ "*) local file="${line#@ }"
                               local dir="${file%'/'*}"
                               command mkdir -p "$base/$dir"
                               ;;
                            *)
                               line="${line# }"
                               echo "$line" >> "$base/$file"
                               ;;
        esac
    done

    IFS="$_old_ifs"
}

# vim: filetype=sh autoindent expandtab shiftwidth=4 softtabstop=4
