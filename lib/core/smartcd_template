function smartcd_template() {
    local action=$1; shift

    # Going to cheat here a bit because doing this right is _hard_
    # temporarily set nonomatch in zsh who will barf on the following ls without it
    if [[ -n $ZSH_VERSION ]]; then
        setopt localoptions
        setopt nonomatch
    fi

    local base=$(_smartcd_base)

    # Force an empty argument to ls in order to gracefully handle nullglob
    case $(command ls '' $base/template_* 2>/dev/null) in
        '') ;;
         *) smartcd_upgrade_database;;
    esac

    case $action in
          _init)    local name="$1"; shift
                    local from="$1"
                    if [[ -n "$from" ]]; then
                        if [[ -f "$base/scripts$from/bash_enter" ]]; then
                            local enter_orig="$(eval command cat \"$base/scripts$from/bash_enter\")"
                            enter_orig="${enter_orig//$from/__PATH__}"
                        fi
                        if [[ -f "$base/scripts$from/bash_leave" ]]; then
                            local leave_orig="$(eval command cat \"$base/scripts$from/bash_leave\")"
                            leave_orig="${leave_orig//$from/__PATH__}"
                        fi
                    fi

                    command mkdir -p "$base/templates"
                    if [[ ! -f "$base/templates/$name" ]]; then
                        command cat <<EOF >> "$base/templates/$name"
########################################################################
# This is a smartcd template.  Edit this file to create a named
# configuration you can copy to any number of directories.  This is
# useful if you often use the same settings in different directories
# but with minor differences.
#
# The string __PATH__ will be replaced with the directory being
# configured when this template is installed, so you can set variables:
#
#    autostash PATH=__PATH__/bin:\$PATH
#
# This template is named '$name'
########################################################################

# Enter any bash_enter commands below here: (leave this line!)
$enter_orig

# Enter any bash_leave commands below here: (leave this line!)
$leave_orig
EOF
                    fi
                    ;;
        edit|-e)    local name="$1"; shift
                    if [[ -n $name ]]; then
                        smartcd_template _init "$name"
                        ${EDITOR:-vi} "$base/templates/$name"
                    else
                        echo "Usage: smartcd template edit <name>"
                    fi
                    ;;
      create|-c)    local name="$1"; shift
                    if [[ -n $name ]]; then
                        if [[ -f "$base/templates/$name" ]]; then
                            echo "Template $name already exists, run \"smartcd template edit $name\" to modify it"
                        else
                            smartcd_template _init "$name" "$(pwd)"
                            smartcd_template edit "$name"
                        fi
                    else
                        echo "Usage: smartcd template create <name>"
                    fi
                    ;;
        list|-l)    for file in $base/templates/*; do
                        # if the user has shell options that leave us with a literal asterisk here
                        # in the event of no matches, we'll want to skip it.  rather than check and
                        # twiddle shell options, let's just see if that's what happened
                        if [[ "$file" == "$base/templates/*" ]]; then
                            break
                        fi
                        echo ${file#*templates/}
                    done
                    ;;
        show|-s)    local name="$1"; shift
                    if [[ -n $name ]]; then
                        if [[ -f "$base/templates/$name" ]]; then
                            command cat "$base/templates/$name"
                        else
                            echo "Template $name not found"
                        fi
                    else
                        echo "Usage: smartcd template show <name>"
                    fi
                    ;;
      show_part)    local name="$1"; shift
                    if [[ -n $name ]]; then
                        if [[ -f "$base/templates/$name" ]]; then
                            echo "# begin smartcd template $name $1"
                            local saving line=
                            while builtin read -r line; do
                                case $line in
                                    "# Enter any bash_$1 commands"*) saving=1;;
                                                "# Enter any bash"*) saving=;;
                                                                  *) if [[ -n $saving ]]; then echo "# $line"; fi;;
                                esac
                            done < "$base/templates/$name"
                            echo "# end smartcd template $name $1"
                        else
                            echo "Template $name not found"
                        fi
                    else
                        echo "Usage: smartcd template show <name>"
                    fi
                    ;;
     install|-i)    local name="$1"; shift
                    if [[ -n $name ]]; then
                        if [[ -f "$base/templates/$name" ]]; then
                            local current_dir=$(pwd)
                            local smartcd_dir="$base/scripts$current_dir"
                            command mkdir -p "$smartcd_dir"
                            local mode= line=
                            while builtin read -r line; do
                                if [[ $line =~ "Enter any bash_enter commands" ]]; then
                                    mode=enter
                                    continue
                                fi
                                if [[ $line =~ "Enter any bash_leave commands" ]]; then
                                    mode=leave
                                    continue
                                fi
                                if [[ "$mode" == "enter" ]]; then
                                    if [[ -z "$notified_enter" ]]; then
                                        echo "Configuring $smartcd_dir/bash_enter from template $name"
                                        local notified_enter=1
                                    fi
                                    echo "$line" >> "$smartcd_dir/bash_enter"
                                elif [[ "$mode" == "leave" ]]; then
                                    if [[ -z "$notified_leave" ]]; then
                                        echo "Configuring $smartcd_dir/bash_leave from template $name"
                                        local notified_leave=1
                                    fi
                                    echo "$line" >> "$smartcd_dir/bash_leave"
                                fi
                            done < "$base/templates/$name"
                        else
                            echo "Template $name not found"
                        fi
                    else
                        echo "Usage: smartcd template install <name>"
                    fi
                    ;;
      delete|rm|-d) local name="$1"; shift
                    if [[ -n $name ]]; then
                        if [[ -f "$base/templates/$name" ]]; then
                            command rm "$base/templates/$name"
                        else
                            echo "Template $name not found"
                        fi
                    else
                        echo "Usage: smartcd template delete <name>"
                    fi
                    ;;
               run) local name="$1"; shift
                    local mode="$1"; shift
                    if [[ -z $mode ]]; then
                        mode="$smartcd_runmode"
                    fi
                    if [[ -n $name ]]; then
                        if [[ -f "$base/templates/$name" ]]; then
                            local contents saving line= _old_ifs="$IFS"
                            IFS=$'\n'
                            while builtin read -r line; do
                                case $line in
                                    "# Enter any bash_$mode commands"*) saving=1;;
                                                   "# Enter any bash"*) saving=;;
                                                                     *) if [[ -n $saving ]]; then
                                                                            contents="$contents"$'\n'"$line"
                                                                        fi
                                                                        ;;
                                esac
                            done < "$base/templates/$name"
                            IFS="$_old_ifs"
                            _smartcd_exec "$contents" "$(pwd)"
                        else
                            echo "Template $name not found"
                        fi
                    else
                        echo "Usage: smartcd template run <name> ( enter | leave )"
                    fi
                    ;;
             '')    echo "Usage: smartcd template ( edit | create | list | show | run | install | delete ) [args]"
                    ;;
              *)    echo "Unknown action $action."
                    echo "Usage: smartcd template ( edit | create | list | show | run | install | delete ) [args]"
                    ;;
    esac
}

# vim: filetype=sh autoindent expandtab shiftwidth=4 softtabstop=4
